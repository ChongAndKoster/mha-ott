"""
Django settings for overcoming_thinking_traps project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY_MHA_TOOL']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

CSP_IMG_SRC = ("'unsafe-inline'", "https://raw.githubusercontent.com", "https://www.w3.org", "data:")

CSP_STYLE_SRC = ("'unsafe-inline'", "https://cdn.jsdelivr.net", "https://cdn", "https://cdnjs.cloudflare.com", "https://code.jquery.com", "https://fonts.googleapis.com", "'self'")



CSP_SCRIPT_SRC = ("'unsafe-inline'", "'unsafe-eval'", "https://cdn.jsdelivr.net", "https://cdn", "https://cdnjs.cloudflare.com", "https://code.jquery.com", "https://fonts.googleapis.com", "https://github.com", "https://www.googletagmanager.com", "https://www.google-analytics.com/", "'self'")

CSP_CONNECT_SRC = ("'unsafe-inline'", "https://www.google-analytics.com/", "'self'")


CSP_SCRIPT_SRC_ELEM = ("'unsafe-inline'", "https://cdn.rawgit.com", "https://cdn.jsdelivr.net", "https://cdn", "https://cdnjs.cloudflare.com", "https://code.jquery.com", "https://fonts.googleapis.com", "https://github.com", "https://www.googletagmanager.com", "https://www.google-analytics.com/", "'self'")



CSP_FONT_SRC = ("'unsafe-inline'", "https://cdn.jsdelivr.net", "https://cdn", "https://cdnjs.cloudflare.com", "https://code.jquery.com", "https://fonts.googleapis.com", "https://fonts.gstatic.com")

CSP_FRAME_ANCESTORS = ("'self'", 'http://megavolt.cs.washington.edu:15000', 'https://mhanationalstg.wpengine.com', 'https://screening.mhanational.org', 'https://mhanational.org')

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'diy_tool.apps.DiyToolConfig',
	'study.apps.StudyConfig',
]

CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SECURE = True
CSRF_TRUSTED_ORIGINS = ['https://mhanationalstg.wpengine.com', 'https://screening.mhanational.org', 'https://mhanational.org']

SESSION_COOKIE_SAMESITE = 'None'  # As a string
SESSION_COOKIE_SECURE = True


SESSION_COOKIE_AGE = 60 * 60 * 24 * 7 * 52  # 1 year
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True


SESSION_ENGINE = "django.contrib.sessions.backends.db"

MIDDLEWARE = [
	'csp.middleware.CSPMiddleware',
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'overcoming_thinking_traps.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(SETTINGS_PATH, 'diy_tool', 'templates'), os.path.join(SETTINGS_PATH, 'templates'),],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'overcoming_thinking_traps.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
	'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['OTT_DBNAME'],
        'USER': os.environ['OTT_DBUSER'],
        'PASSWORD': os.environ['OTT_DBPASS'],
        'HOST': os.environ['OTT_DBHOST'],
		'PORT': '5432'
    }
	# 'default': {
	# 	'ENGINE': 'django.db.backends.sqlite3',
	# 	'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
	# }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATICFILES_DIRS = (str(BASE_DIR.joinpath('static')),)
# STATIC_URL = '/static/'

# AUTH_USER_MODEL = "users.CustomUser"

# AUTHENTICATION_BACKENDS = ['users.auth_backend.PasswordlessAuthBackend',]

DEFAULT_AUTO_FIELD ='django.db.models.AutoField' 

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), )
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# LOGIN_REDIRECT_URL = '/study/home'
# LOGIN_URL = '/users/login'